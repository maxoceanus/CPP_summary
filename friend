#友元类和友元函数

一.友元函数
1.概述
(1).友元函数是指某些不是类成员函数却能够通过类对象访问其所有成员的函数。
(2).类授予它的友元特别的访问权。
(3).优点：提高编程的灵活性和程序的执行效率
(4).缺点：破坏了类的封装机制

2.友元函数的特点
(1).友元函数不是类的成员函数，但需要在类中进行声明
(2).若在类A中声明了友元函数fun()，该友元函数并不能直接访问A的成员，只能通过类A的对象a访问其所有的成员，包括私有和保护的成员
(3).由于友元函数不是类的成员函数，它没有隐含的this指针
(4).友元函数的调用方式与普通函数一样，不需要通过对象来调用
(5).一个友元函数可以作为另外类的成员函数，此时，它既有友元函数的特点，又有成员函数的特点
(6).友元函数破坏了数据的安全性，使用友元函数必须谨慎，不要通过友元函数对数据成员进行危险的操作

3.友元函数的定义
friend 函数类型 友元函数名（参数表）；
例如：
class Point{
	...
	friend double distance(Point &a, Point &b);	//声明友元函数
};
double distance(Point &a, Point &b){};			//友元函数的实现
注：友元函数不是类的成员函数，因此无法继承，这也是友元函数不需要考虑访问权限的原因

4.操作多个对象数据成员的友元函数
(1).将这个类声明为所有相关类的友元函数
例：
class A;						//由于友元函数包含A类和B类对象，因此需要对A类进行前向引用声明
class B{
	friend int fun(A &, B &);	//友元函数的声明
	...
};
class A{
	friend int fun(A &, B &);	//友元函数的声明
	...
};
int fun(A &, B &);				//友元函数的实现
(2).一个类的成员函数可以声明为其他一个或多个类的成员函数
某类的成员函数是其他类的友元函数，则称它为友元成员，友元成员既可以访问所在类的所有成员，也可以访问由friend声明所在类的所有成员

二.友元类
1.可将一个类声明为另一个类的友元类，若B类为A类的友元类，则B类的所有成员函数都是A类的友元函数
例：
class A{
	...
public:
	friend class B;
};
class B{
public:
	void display(A tmp){}
};
上例中，类B的成员函数可以通过类A对象访问其私有数据类型

2.友元关系的特点
(1).非传递性
(2).单向性
(3).不可继承性2.友元关系的特点
(1).非传递性
(2).单向性
(3).不可继承性
